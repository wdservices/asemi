rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Users can read and write their own user profile
    // Admins can read all user profiles
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && request.auth.uid == userId;
      allow update: if isAdmin(); // Admins can update user roles
    }
    
    // Allow authenticated users to read all courses
    // Allow admins to write courses
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Payments collection - users can read their own, admins can read all
    match /payments/{paymentId} {
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || isAdmin());
      allow create: if request.auth != null;
    }
    
    // AI Tools collection (if you add it later)
    match /ai_tools/{toolId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}